---
- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Import VPC Variables
      include_vars: vars/vpc_setup

    - name: Create vprofile vpc_setup
      ec2_vpc_net:
        name: "{{vpc_name}}"
        cidr_block: "{{vpcCidr}}"
        region: "{{region}}"
        dns_support: yes
        dns_hostnames: yes
        tenancy: default
        state: "{{state}}"
      register: vpcout
        
    - name: Create public subnet 1 in zone1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{ Zone1 }}"
        state: "{{state}}"
        cidr: "{{PubSub1Cidr}}"
        map_public: yes
        resource_tags:
          Name: vprofile-PubSub1
      register: pubsub1_out

    - name: Create public subnet 2 in zone1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{ Zone2 }}"
        state: "{{state}}"
        cidr: "{{PubSub2Cidr}}"
        map_public: yes
        resource_tags:
          Name: vprofile-PubSub2
      register: pubsub2_out

    - name: Create public subnet 3 in zone1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{ Zone3 }}"
        state: "{{state}}"
        cidr: "{{PubSub3Cidr}}"
        map_public: yes
        resource_tags:
          Name: vprofile-PubSub3
      register: pubsub3_out 

    - name: Create private subnet 1 in zone1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{ Zone1 }}"
        state: "{{state}}"
        cidr: "{{PrivSub1Cidr}}"
        map_public: yes
        resource_tags:
          Name: vprofile-PrivSub1
      register: privsub1_out 

    - name: Create private subnet 2 in zone1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{ Zone2 }}"
        state: "{{state}}"
        cidr: "{{PrivSub2Cidr}}"
        map_public: yes
        resource_tags:
          Name: vprofile-PrivSub2
      register: privsub2_out  

    - name: Create private subnet 3 in zone1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{ Zone3 }}"
        state: "{{state}}"
        cidr: "{{PrivSub3Cidr}}"
        map_public: yes
        resource_tags:
          Name: vprofile-PrivSub3
      register: privsub3_out   

    - name: internet gateway setup
      ec2_vpc_igw:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        state: "{{state}}"
        resource_tags:
          Name: vprofile-igw
      register: igw_out
   
    - name: route table for public subnet
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        tags:
          Name: pub_routetable
        subnets:
         - "{{pubsub1_out.subnet.id}}"
         - "{{pubsub2_out.subnet.id}}" 
         - "{{pubsub3_out.subnet.id}}"
        routes:
         - dest: 0.0.0.0/0
           gateway_id: "{{ igw_out.gateway_id }}"
      register: public_route_out

    - name: Create new nat gateway, using an EIP address  and wait for available status.
      ec2_vpc_nat_gateway:
       state: "{{state}}"
       subnet_id: "{{pubsub3_out.subnet.id}}"
       wait: yes
       region: "{{region}}"
       if_exist_do_not_create: true
       resource_tags:
         Name: vprofile-igw
      register: nat_gateway_out

    
    - name: route table for private subnet
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        tags:
          Name: priv_routetable
        subnets:
         - "{{privsub1_out.subnet.id}}"
         - "{{privsub2_out.subnet.id}}" 
         - "{{privsub3_out.subnet.id}}"
        routes:
         - dest: 0.0.0.0/0
           gateway_id: "{{ nat_gateway_out.nat_gateway_id }}"
      register: private_route_out
    
    - debug:
       var: "{{item}}"
      loop:
       - vpcout.vpc.id 
       - pubsub1_out.subnet.id
       - pubsub2_out.subnet.id
       - pubsub3_out.subnet.id
       - privsub1_out.subnet.id
       - privsub2_out.subnet.id
       - privsub3_out.subnet.id
       - igw_out.gateway_id
       - public_route_out.route_table.route_table_id
       - nat_gateway_out.nat_gateway_id
       - private_route_out.route_table.route_table_id
    - set_fact:
       vpc_id: "{{vpcout.vpc.id}}"
       pubsub1id: "{{pubsub1_out.subnet.id}}"
       pubsub2id: "{{pubsub2_out.subnet.id}}" 
       pubsub3id: "{{pubsub3_out.subnet.id}}"
       privsub1id: "{{privsub1_out.subnet.id}}"
       privsub2id: "{{privsub2_out.subnet.id}}"
       privsub3id: "{{privsub3_out.subnet.id}}"
       igw_id: "{{ igw_out.gateway_id }}"
       public_rt_id: "{{public_route_out.route_table.route_table_id}}"  
       nat_id: "{{ nat_gateway_out.nat_gateway_id }}"
       private_rt_id: "{{private_route_out.route_table.route_table_id}}" 
       cacheable: yes 
    - name: save output values in file
      copy:
        content: "vpc_id: {{vpcout.vpc.id}}\npubsub1id: {{pubsub1_out.subnet.id}}\npubsub2id: {{pubsub2_out.subnet.id}}\npubsub3id: {{pubsub3_out.subnet.id}}\nprivsub1id: {{privsub1_out.subnet.id}}\nprivsub2id: {{privsub2_out.subnet.id}}\n privsub3id: {{privsub3_out.subnet.id}}\nigw_id: {{ igw_out.gateway_id }}\npublic_rt_id: {{public_route_out.route_table.route_table_id}}\nnat_id: {{ nat_gateway_out.nat_gateway_id }}\nprivate_rt_id: {{private_route_out.route_table.route_table_id}}"
        dest: vars/output_vars
        